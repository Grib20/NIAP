self.addEventListener("message", (event) => {
    if (event.data.type === "start") {
        console.log("üîÑ Web Worker –Ω–∞—á–∞–ª —Ñ–æ–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞");

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º refresh-—Ç–æ–∫–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        self.refreshToken = event.data.refreshToken;

        setInterval(() => {
            refreshTokenInBackground();
        }, 600000); // 5 –º–∏–Ω—É—Ç
    }

    if (event.data.type === "updateToken") {
        console.log("üîÑ Web Worker –ø–æ–ª—É—á–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π refreshToken");
        self.refreshToken = event.data.refreshToken; // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω
    }
});

async function refreshTokenInBackground() {
    if (!self.refreshToken) {
        console.error("‚ùå –û—à–∏–±–∫–∞: Refresh token –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —É–≤–µ–¥–æ–º–ª—è–µ–º –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫.");
        self.postMessage("logout");
        return;
    }

    try {
        const response = await fetch("https://directus.nplanner.ru/auth/refresh", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ refresh_token: self.refreshToken })
        });

        const data = await response.json();

        if (response.ok && data.data?.access_token) {
            console.log("‚úÖ Access token –æ–±–Ω–æ–≤–ª—ë–Ω –≤ —Ñ–æ–Ω–µ!");

            // –°–æ–æ–±—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–º—É –ø–æ—Ç–æ–∫—É –Ω–æ–≤—ã–π access_token –∏ refresh_token
            self.postMessage({
                type: "tokenUpdated",
                accessToken: data.data.access_token,
                refreshToken: data.data.refresh_token,
                expires: Date.now() + data.data.expires
            });
        } else {
            console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤ —Ñ–æ–Ω–µ:", data);
            self.postMessage("logout"); // –£–≤–µ–¥–æ–º–ª—è–µ–º –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫ –æ —Ä–∞–∑–ª–æ–≥–∏–Ω–µ
        }
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞ –≤ —Ñ–æ–Ω–µ:", error);
        self.postMessage("logout"); // –£–≤–µ–¥–æ–º–ª—è–µ–º –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫ –æ —Ä–∞–∑–ª–æ–≥–∏–Ω–µ
    }
}
